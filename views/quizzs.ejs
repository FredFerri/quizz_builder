<!doctype html>
<html lang="en">
    <head>
        <title>MyCompany - ZyPop Web Templates</title>

        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

        <!-- Main CSS --> 
        <link rel="stylesheet" href="style.css">s
        <link rel="stylesheet" type="text/css" href="custom.css">

        <!-- Font Awesome -->
        <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.3.1/css/all.css" integrity="sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU" crossorigin="anonymous">
        <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
        <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>        
    </head>
  
    <body>

         <!-- Main navigation -->
        <div id="sidebar">
                      
            <div class="navbar-expand-md navbar-dark"> 
            
                <header class="d-none d-md-block">
                    <h1><span>my</span>website</h1>
                </header>
                
                
                <!-- Mobile menu toggle and header -->
                <div class="mobile-header-controls">
                    <a class="navbar-brand d-md-none d-lg-none d-xl-none" href="#"><span>my</span>website</a>
                    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#SidebarContent" aria-controls="SidebarContent" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                </div>
         
                <div id="SidebarContent" class="collapse flex-column navbar-collapse">
 
                        
                    
                    <!-- Main navigation items -->
                    <nav class="navbar navbar-dark">
                        <div id="mainNavbar">
<!--                             <ul class="flex-column mr-auto">
                                <li class="nav-item">
                                        <a class="nav-link" href="index.html">Home <span class="sr-only">(current)</span></a>
                                </li>

                                <li class="nav-item active dropdown">
                                            <a class="nav-link dropdown-toggle" href="#MenuDropdown" data-toggle="collapse" aria-controls="MenuDropdown" aria-expanded="false">Examples &amp; Pages</a>
                                            <ul id="MenuDropdown" class="sub-navbar collapse flex-column">
                                                <li class="nav-item"><a class="nav-link" href="examples.html">Style Examples</a></li>
                                                <li class="nav-item"><a class="nav-link" href="three-column.html">Three Column</a></li>
                                                <li class="nav-item"><a class="nav-link" href="one-column.html">One column / no sidebar</a></li>
                                                <li class="nav-item"><a class="nav-link"  href="text.html">Text / left sidebar</a></li>
                                                <li class="nav-item"><a class="nav-link"  href="index-right.html">Right navigation</a></li>
                                            </ul>
                                </li>


                                <li class="nav-item">
                                        <a class="nav-link" href="#">Services</a>
                                </li>

                                <li class="nav-item">
                                        <a class="nav-link" href="#">Products</a>
                                </li>

                                <li class="nav-item">
                                        <a class="nav-link" href="#">Contact</a>
                                </li>
                            </ul> -->
                        </div>   
                    </nav>
                
                </div>
            </div> 
        </div>
    
        
        <div id="content">
            <div id="content-wrapper">

                <!-- Jumbtron / Slider -->
                <div class="jumbotron-wrap">
                    <div class="container-fluid">
                        <div class="jumbotron static-slider">
                            <h1 class="text-center">One column layout</h1>
                            <p class="lead text-center">With a static slider.</p>
                        </div>
                    </div>
                </div>

                <!-- Main content area -->
                <main class="container-fluid">
                    <h2>Quizzs</h2>
                    <div class="quizz_list_block">
                        <ul class="quizz_list">
                        </ul>    
                    </div>
                    <div id="app" class="col main-content">
                        <form action="submitQuizz" method="post">
                            <questionblock
                            v-for="(question, index) in questionsList"
                            :is="questionType"
                            v-bind:question_prop="question"
                            v-bind:question_index="index"
                            v-bind:key="question._id"
                            v-bind:answers="question.answers"
                            @add="addQuestion"
                            @remove="removeQuestion(index)">
                            </questionblock>
                            <a href="#" class="submit-form" v-on:click="submitForm">Valider le questionnaire</a>
                        </form>
                    </div>
                </main>
            </div>
        </div>


        <script type="text/javascript">

            function selectQuizz(elt) {                    
                var id_quizz = elt.id.substr(3);
                $.get('/quizz/'+id_quizz, function() {
                    console.log('Call to quizz with id No'+id_quizz);
                })
                .done(function(datas) {
                    console.dir(datas);
                    console.log(datas.questions.length);
                    console.log(datas.questions[0].answers.length);
                    loadQuizz(datas);
                })
                .fail(function() {
                    console.log('Error on quizz call');
                })
            };


            $(document).ready(function() {
                $.get('/quizzs', function() {
                    console.log('Call to quizzs');
                })
                .done(function(datas) {
                    for (var quizz of datas) {
                        console.dir(quizz);
                        $('.quizz_list').append('<li><a href="#" class="quizz_link" id="id_'+quizz._id+'" onclick="return selectQuizz(this);">'+quizz.name+'</a></li>')
                    }
                })
                .fail(function() {
                    console.log('Error on quizzs call');
                });
            });

        </script>

        <script type="text/javascript">

            function loadQuizz(quizzDatas) {
                var nbQuestions = quizzDatas.questions.length;
                var nbAnswers = quizzDatas.questions[0].answers.length;

                let questionblock = Vue.component('questionblock', {
                    delimiters: ['[[', ']]'],
                    data: function() {
                        return {
                            answersList: quizzDatas,
                            answerType: answerblock,
                        }
                    },                    
                    props: ['question_prop', 'question_index', 'answers'],
                    methods: {
                        addQuestion() {
                            app.questionsList.push({'_id': new Date().getTime(), 
                                'answers': [{'_id': new Date().getTime()+1}]
                            });
                        },
                        removeQuestion(index) {
                            let id = app.questionsList[index]._id;
                            app.questionsList.splice(index,1);
                            if (id.substr(0, 2) == '5c') {
                                app.removeItemFromDb('Question', id);
                            }
                        },

                        addAnswer(question_index) {
                            app.questionsList[question_index].answers.push({'_id': new Date().getTime()});
                        },    

                        removeAnswer(question_index, index) {
                            let id = app.questionsList[question_index].answers[index]._id;
                            app.questionsList[question_index].answers.splice(index, 1);
                            if (id.substr(0,2) == '5c') {
                                app.removeItemFromDb('Answer', id);
                            }
                        }  
                    },
                    template: `<div class="block-question">                   
                                <legend>Question [[ question_index+1 ]]</legend>
                                <span class="num-question d-inline-block">[[ question_index+1 ]]</span>
                                <textarea v-bind:id="'quest_'+question_index" class="form-control question-control d-inline-block" v-bind:name="'quest_'+question_index" placeholder="Entrez votre question">[[ question_prop.content ]]</textarea>
                                <input type="hidden" v-bind:value="question_index">
                                <input type="hidden" class="question-id" v-bind:value="question_prop._id">
                                <i class="fas fa-plus-circle" @click.prevent="addQuestion"></i>
                                <i class="fas fa-trash" @click.prevent="removeQuestion(question_index)"></i>
                                <answerblock v-for="(answer, index) in answers" v-bind:answer_prop="answer" :key="answer._id" v-bind:question_index="question_index" v-bind:index_prop="index" :is="answerType" @remove="removeAnswer(question_index, index)" @addAnswer="addAnswer(question_index)"></answerblock>
                            </div>`
                });

                let answerblock = Vue.component('answerblock', {
                    delimiters: ['[[', ']]'],
                    props: ['answer_prop', 'index_prop', 'question_index'],
                    methods: {
                        addAnswer() {
                            this.$emit('addAnswer');
                        },

                        removed() {
                            this.$emit('remove');
                        }
                    },
                    template: `<div class="block-answer" ref="elt">
                                <span class="num-answer d-inline-block">[[ index_prop+1 ]]</span>
                                <textarea class="form-control answer-control d-inline-block" type="text" v-bind:name="'answ_'+question_index+'_'+index_prop" placeholder="Entrez votre réponse">[[answer_prop.content ]]</textarea>
                                <select class="answer_coeff" v-model="answer_prop.coeff">
                                    <option v-for="n in 5" :value="n">[[ n ]]</option>
                                </select>
                                <input type="hidden" class="answer-id" v-bind:value="answer_prop._id">
                                <i class="fas fa-plus-circle" @click.prevent="addAnswer"></i>
                                <i class="fas fa-trash" @click.prevent="removed(index_prop)"></i>
                            </div>`
                });

                var app = new Vue({
                    delimiters: ['[[', ']]'],
                    components: {questionblock, answerblock},
                    el: '#app',
                    data: {
                        start_id: document.getElementById('app').getAttribute('data'),
                        id_question: 1,
                        questionsList: quizzDatas.questions,
                        // questionsList: [{'Hash': new Date().getTime()}],
                        questionType: questionblock
                    },
                    methods: {
                        addQuestion() {
                            questionsList.push(questionblock);
                        },
                        removeQuestion(index) {
                            questionsList.splice(index,1);
                        },
                        removeItemFromDb(itemType, id) {
                            let url = '';
                            switch (itemType) {
                                case 'Quizz':
                                    url = '/quizz/'+id;
                                    break;
                                case 'Question':
                                    url = '/quizz/question/'+id;
                                    break;
                                case 'Answer':
                                    url = 'quizz/question/answer/'+id;
                                    break;
                            }
                            console.log(url);
                            $.ajax({
                                url: url,
                                type: 'DELETE',
                                success: function(result) {
                                    console.log(result);
                                },
                                error: function(jqxhr, status, exception) {
                                    alert('Exception: ' + exception);
                                }
                            })
                        },
                        submitForm() {
                            let jsonResponse = {"name": "Quizz test", "description": "Description pour le quizz test"};
                            let questions = document.getElementsByClassName('question-control');
                            let questionBlocks = document.getElementsByClassName('block-question');
                            var questionsList = {};
                            let q_count = 0;
                            for (let q_block of questionBlocks) {
                                let q_name = $(q_block).find('.question-control')[0].name;
                                q_content = $(q_block).find('.question-control')[0].value;
                                q_id = $(q_block).find('.question-id').val();
                                var questionObj = {"id": q_id, "content": q_content};
                                let answers = $(q_block).find('.block-answer > .answer-control');
                                questionObj['answers'] = {};
                                let a_count = 0;
                                for (let answer of answers) {
                                    let a_name = answer.name;
                                    let a_content = answer.value;
                                    let a_coeff = $(answer).next('.answer_coeff').val();
                                    let a_id = $(answer).next('.answer_coeff').next('.answer-id').val();
                                    let answerObj = {};
                                    answerObj = {"id": a_id, "content": a_content, "coeff": a_coeff};
                                    questionObj['answers'][a_count] = answerObj;
                                    ++a_count;
                                }
                                questionsList[q_count] = questionObj;
                                ++q_count;
                            }
                            jsonResponse.questions = questionsList;
                            console.log('JSON_datas=');
                            console.dir(JSON.stringify(jsonResponse));

                            $.ajax({
                                url: '/quizz/'+quizzDatas.quizz._id,
                                headers: {
                                    'Accept': 'application/json',
                                    'Content-Type': 'application/json',
                                },
                                type: 'PATCH',
                                data: JSON.stringify(jsonResponse),
                                success: function(result) {
                                    console.dir(result);
                                    console.log(JSON.stringify(result));
                                },
                                error: function(jqxhr, status, exception) {
                                    alert('Exception: ' + exception);
                                }
                            })     
                        }
                    }                
                })
            }

        </script>

    </body>
</html>